<scriptedOperation id="adminCenter_GetEnvInfo" version="1.2">
  <script>/* Using &quot;Java in JavaScript&quot; to avoid depending on a plugin for just fetching environment info
   This code is basically the same as what the old JSF Admin Center was doing.
*/
function run(input, params) {
  
  var envInfo, System, Runtime;
    
  System = java.lang.System;
  Runtime = java.lang.Runtime.getRuntime();
  
  try {
    envInfo = {
      &quot;os&quot;: System.getProperty(&quot;os.name&quot;) + &quot; (&quot; +System.getProperty(&quot;os.arch&quot;) + &quot;)&quot;,
      &quot;cpus&quot;: Runtime.availableProcessors(),
      &quot;jvm&quot;: System.getProperty(&quot;java.runtime.name&quot;) + &quot; &quot; + System.getProperty(&quot;java.runtime.version&quot;),
      &quot;jvmBuild&quot;: System.getProperty(&quot;java.vm.version&quot;) + &quot; (&quot; + System.getProperty(&quot;java.vendor&quot;) + &quot;)&quot;,
      
      &quot;platformLanguage&quot;: System.getProperty(&quot;user.language&quot;) + &quot; (&quot; + System.getenv(&quot;LANG&quot;) + &quot;)&quot;,
      
      &quot;memHeap&quot;: formatSize(Runtime.totalMemory()),
      &quot;memFree&quot;: formatSize(Runtime.freeMemory()),
      &quot;memUsed&quot;: formatSize(Runtime.totalMemory() - Runtime.freeMemory()),
      &quot;memMax&quot;: formatSize(Runtime.maxMemory()),
      
      &quot;uptime&quot;: getUptime(),
      
      &quot;repositories&quot;: getRepositories(),
      
      &quot;clusterOn&quot;: Env[&quot;nuxeo.cluster.enabled&quot;] === &quot;true&quot;,
      &quot;clusterNodeId&quot;: Env[&quot;nuxeo.cluster.nodeid&quot;]
    };
    
    envInfo.status = &quot;OK&quot;;
    
  } catch (err) {
    Console.error(&quot;ERRORÂ±:&quot; + err);
    envInfo = {
      &quot;status&quot;: &quot;KO&quot;,
      &quot;errMsg&quot;: &quot;&quot; + err
    };
  }
 
  return org.nuxeo.ecm.core.api.Blobs.createJSONBlob(JSON.stringify(envInfo));

}

function formatSize(size) {
  var units = [&quot;B&quot;, &quot;KB&quot;, &quot;MB&quot;, &quot;GB&quot;, &quot;TB&quot;];
  var index = 0;
  var formattedSize = size;
  while (formattedSize &gt; 1024 &amp;&amp; index &lt; units.length - 1) {
    formattedSize /= 1024;
    index++;
  }
  return &quot;&quot; + formattedSize.toFixed(2) + &quot; &quot; + units[index];
}

function getUptime() {
  
  var bean, ut, uts, nbDays, nbHours, nbMin, uptime;
  
  bean = java.lang.management.ManagementFactory.getRuntimeMXBean();
  ut = ut = bean.getUptime();
  uts = Math.floor(ut / 1000);
  
  uptime = &quot;&quot;;
  
  nbDays = Math.floor(uts / (24 * 3600));
  if (nbDays &gt;= 1) {
    uptime += nbDays + &quot; days, &quot;;
    uts = uts % (24 * 3600);
  }
  
  nbHours = Math.floor(uts / 3600);
  uptime += nbHours + &quot;h &quot;;
  uts = uts % 3600;
  
  nbMin = Math.floor(uts / 60);
  uptime += nbMin + &quot;m &quot;;

  uts = uts % 60;
  uptime += uts + &quot;s&quot;;
  
  return uptime;
}

function getRepositories() {
  
  var i, repositoryManager, repositoriesJavaCollection, repositoriesJavaArray, repositories, defaultRepo;
  
  repositoryManager = org.nuxeo.runtime.api.Framework.getService(org.nuxeo.ecm.core.api.repository.RepositoryManager.class);
  repositoriesJavaCollection = repositoryManager.getRepositories();
  
  repositories = [];
  // Convert repositoriesJavaCollection to JS array
  repositoriesJavaArray = repositoriesJavaCollection.toArray();
  for(i = 0; i &lt; repositoriesJavaArray.length; i++) {
    repositories.push(repositoriesJavaArray[i].name);
  }
  
  defaultRepo = repositoryManager.getDefaultRepositoryName();
  
  return {
    &quot;repositories&quot;: repositories,
    &quot;defaultRepo&quot;: defaultRepo
  };
  
}

</script>
  <description></description>
  <inputType>void</inputType>
  <outputType>blob</outputType>
  <category>javascript</category>
  <disableHelperComments>true</disableHelperComments>
</scriptedOperation>